iceberg {
    topic protocol.bgp {
        rule check-bgp-session-state-iagent {
            synopsis "BGP session state analyzer";
            description "Collects BGP session state periodically and notify anomalies when neighbor session down";
            keys peer-address;
            rule-frequency 60s;
            sensor bgp-sensor {
                synopsis "iAgent sensor definition";
                description "iAgent sensor to collect telemetry data from network device";
                iAgent {
                    file bgp-get-neighbors.yml;
                    table BgpNeighborTable;
                    frequency 60s;
                }
            }
            trigger neighbor-state {
                synopsis "BGP session state KPI";
                description "Sets health based on change in BGP neighbor session state";
                frequency 60s;
                term is-neighbor-up {
                    when {
                        matches-with "$peer-state" Established {
                            ignore-case;
                        }
                    }
                    then {
                        status {
                            color green;
                            message "Neighbor session up";
                        }
                    }
                }
                term is-neighbor-down {
                    then {
                        status {
                            color red;
                            message "Neighbor session down";
                        }
                    }
                }
            }
            variable flap-count-threshold {
                value 1;
                description "BGP neighbor session flaps threshold: Number of flap increase between metrics, before we report anomaly";
                type int;
            }
        }
    }
}
