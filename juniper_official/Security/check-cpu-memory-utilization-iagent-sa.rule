/*
 * Detects cpu and memory utilization and notifies when anomalies are
 * found in standalone SRX system.
 * 
 * Two input control detection.
 * 
 *  1) "h-threshold" variable, is the threshold that causes the rule to report
 *  an anomaly.By default it's 80. This rule will set a dashboard color to red
 *  when *all* the memory or cpu utilisation are greater than 'h-threshold'.
 *  
 *  2) "l-threshold" variable, is the threshold that causes the rule to report
 *  an anomaly.By default it's 60. This rule will set a dashboard color to 
 *  yellow when *all* the memory or cpu utilisation are greater than
 *  'l-threshold'.If it is less than l-threshold it is set to green.
 *  
 */
healthbot {
    topic security.spu {
        rule check-cpu-memory-utilization-iagent-sa {
            /*
             * Monitors the cpu and memory utilization and notifies via the
             * dashboard colors, when the cpu and memory utilization is above 
             * high threshold {{h-threshold}} it will mark as red. The color 
             * is set to yellow when the cpu and memory utilization is above 
             * low threshold {{l-threshold}}. Otherwise the color is set to 
             * green.
             *
             * Use fpc and pic as keys for rule.
             */
            keys [ fpc pic ];
            synopsis "SPU cpu and memory stats analyzer";
            description "SPU cpu and memory stats of SRX";
            /*
             * Sensor configuration to get data from network devices.
             * 
             */
            sensor cpu-memory-utilization {
                iAgent {
                    file SecurityCPUMemoryUtilizationSA.yml;
                    table PerfStatsTableSA;
                    frequency 60s;
                }
            }
            /*
             * Fields defined with variables and constant values
             */
            field fpc {
                sensor cpu-memory-utilization {
                    path fpc-number;
                }
                type string;
                description "FPC Number ";
            }
            field high-threshold {
                constant {
                    value "{{h-threshold}}";
                }
                type integer;
                description "high threshold value";
            }
            field low-threshold {
                constant {
                    value "{{l-threshold}}";
                }
                type integer;
                description "low threshold value";
            }
            field pic {
                sensor cpu-memory-utilization {
                    path pic-number;
                }
                type string;
                description "PIC Number";
            }
            field spu-cpu-utilization {
                sensor cpu-memory-utilization {
                    path spu-cpu-utilization;
                }
                type integer;
                description "CPU Utilization field";
            }
            field spu-memory-utilization {
                sensor cpu-memory-utilization {
                    path spu-memory-utilization;
                }
                type integer;
                description "Memory Utilization field";
            }
            /*
             * Anomaly detection logic.
             */
            trigger check-cpu-utilization {
                frequency 90s;
                /*
                 * Sets dashboard color to red when *all* the cpu utilisation
                 * are greater than 'h-threshold' for more than 5 mins.
                 */
                term spu-cpu-utilization-high {
                    when {
                        greater-than "$spu-cpu-utilization" "$high-threshold" {
                            time-range 5m;
                            all;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Fpc$fpc:pic$pic  CPU utilization($spu-cpu-utilization%) is above high threshold";
                        }
                        next;
                    }
                }
                /*
                 * Sets dashboard color to yellow when *all* the cpu utilisation
                 * are greater than 'l-threshold'.
                 */
                term spu-cpu-utilization-low {
                    when {
                        greater-than "$spu-cpu-utilization" "$low-threshold" {
                            all;
                        }
                    }
                    then {
                        status {
                            color yellow;
                            message "Fpc$fpc:pic$pic  CPU utilization($spu-cpu-utilization%) is above low threshold";
                        }
                        next;
                    }
                }
                /*
                 * Sets dashboard color to green when *all* the cpu utilisation
                 * are less than or equal to 'l-threshold'.
                 */
                term spu-cpu-utilization-normal {
                    when {
                        less-than-or-equal-to "$spu-cpu-utilization" "$low-threshold" {
                            all;
                        }
                    }
                    then {
                        status {
                            color green;
                            message "Fpc$fpc:pic$pic  CPU utilization($spu-cpu-utilization%) is normal";
                        }
                    }
                }
            }
            /*
             * Anomaly detection logic.
             */
            trigger check-memory-utilization {
                frequency 20s;
                /*
                 * Sets dashboard color to red when *all* the memory utilisation
                 * are greater than 'h-threshold' for more than 5 mins.
                 */
                term spu-memory-utilization-high {
                    when {
                        greater-than "$spu-memory-utilization" "$high-threshold" {
                            time-range 5m;
                            all;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Fpc$fpc:pic$pic memory utilization($spu-memory-utilization%) is above high threshold";
                        }
                    }
                }
                /*
                 * Sets dashboard color to yellow when *all* the memory utilisation
                 * are greater than 'l-threshold'.
                 */
                term spu-memory-utilization-low {
                    when {
                        greater-than "$spu-memory-utilization" "$low-threshold" {
                            all;
                        }
                    }
                    then {
                        status {
                            color yellow;
                            message "Fpc$fpc:pic$pic memory utilization($spu-memory-utilization%) is above low threshold";
                        }
                    }
                }
                /*
                 * Sets dashboard color to green when *all* the memory utilisation
                 * are less than or equal to 'l-threshold'.
                 */
                term spu-memory-utilization-normal {
                    when {
                        less-than-or-equal-to "$spu-memory-utilization" "$low-threshold" {
                            all;
                        }
                    }
                    then {
                        status {
                            color green;
                            message "Fpc$fpc:pic$pic memory utilization($spu-memory-utilization%) is normal";
                        }
                    }
                }
            }
            /*
             * Variables with default values. Default values can be changed
             * while deploying playbook instance.
             */
            variable h-threshold {
                value 80;
                description "Enter high threshold for cpu and memory";
                type int;
            }
            variable l-threshold {
                value 60;
                description "Enter low threshold value for cpu and memory";
                type int;
            }
            rule-properties {
                version 1;
                contributor juniper;
                supported-healthbot-version 3.0.0;
                    catalogue {
                        tier 1;
                    }
                supported-devices {
                    juniper {
                        operating-system junos {
                            products SRX {
                                releases 15.1R1 {
                                    release-support min-supported-release;
                                    platform All;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
